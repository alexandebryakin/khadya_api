"""
Autogenerated return type of AddRestaurantAttachment.
"""
type AddRestaurantAttachmentPayload {
  errors: JSON
  restaurant: Restaurant!
  status: Status
}

type Attachment {
  contentType: String
  createdAt: ISO8601DateTime!
  id: ID!
  url: String!
}

"""
Autogenerated return type of ChangeCurrentUserPassword.
"""
type ChangeCurrentUserPasswordPayload {
  errors: JSON
  status: Status
}

"""
Autogenerated return type of CreateEmail.
"""
type CreateEmailPayload {
  email: Email
  errors: JSON
  status: Status
}

"""
Autogenerated return type of CreatePhone.
"""
type CreatePhonePayload {
  errors: JSON
  phone: Phone
  status: Status
}

"""
Autogenerated return type of CreateRestaurant.
"""
type CreateRestaurantPayload {
  errors: JSON
  network: Network
  restaurant: Restaurant
  status: Status
}

type Email {
  email: String!
  id: ID!
  isPrimary: Boolean!
  verificationStatus: VerificationStatusEnum!
}

type Errors {
  oneTimePassword: [String!]
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Represents untyped JSON
"""
scalar JSON

type Mutation {
  addRestaurantAttachment(attachment: Upload!, attachmentType: RestaurantAttachmentTypeEnum = image, restaurantId: ID!): AddRestaurantAttachmentPayload
  changeCurrentUserPassword(newPassword: String!, newPasswordConfirmation: String!, oldPassword: String!): ChangeCurrentUserPasswordPayload
  createEmail(email: String!): CreateEmailPayload
  createPhone(number: String!): CreatePhonePayload
  createRestaurant(name: String!): CreateRestaurantPayload
  removeRestaurantAttachment(attachmentId: ID!, attachmentType: RestaurantAttachmentTypeEnum = image, restaurantId: ID!): RemoveRestaurantAttachmentPayload
  sendOneTimePassword(code: String!, number: String!): SendOneTimePasswordPayload
  signinUser(email: String!, password: String!): SigninUserPayload
  signupUser(email: String!, password: String!): SignupUserPayload
  updateCurrentUserInfo(firstName: String!, lastName: String): UpdateCurrentUserInfoMutationPayload
  verifyOneTimePassword(code: String!, number: String!, oneTimePassword: String!): VerifyOneTimePasswordPayload
}

type Network {
  id: ID!
  name: String!
}

type Phone {
  code: String!
  id: ID!
  isPrimary: Boolean!
  number: String!
  verificationStatus: VerificationStatusEnum!
}

type Query {
  user(userId: ID!): User
}

"""
Autogenerated return type of RemoveRestaurantAttachment.
"""
type RemoveRestaurantAttachmentPayload {
  errors: JSON
  restaurant: Restaurant!
  status: Status
}

type Restaurant {
  currencyCode: String!
  id: ID!
  images: [Attachment!]!
  name: String!
}

enum RestaurantAttachmentTypeEnum {
  image
}

"""
Autogenerated return type of SendOneTimePassword.
"""
type SendOneTimePasswordPayload {
  errors: JSON
  status: Status
}

"""
Autogenerated return type of SigninUser.
"""
type SigninUserPayload {
  errors: JSON
  status: Status
  token: String
  user: User
}

"""
Autogenerated return type of SignupUser.
"""
type SignupUserPayload {
  errors: JSON
  status: Status
  token: String
  user: User
}

enum Status {
  failure
  success
}

"""
Autogenerated return type of UpdateCurrentUserInfoMutation.
"""
type UpdateCurrentUserInfoMutationPayload {
  errors: JSON
  status: Status
  user: User!
}

scalar Upload

type User {
  emails: [Email!]!
  firstName: String
  id: ID!
  kind: UserKind!
  languageCode: String!
  lastName: String
  network: Network
  phones: [Phone!]!
  restaurants: [Restaurant!]!
}

enum UserKind {
  anonymous
  real
}

enum VerificationStatusEnum {
  failed
  in_progress
  succeeded
}

"""
Autogenerated return type of VerifyOneTimePassword.
"""
type VerifyOneTimePasswordPayload {
  errors: Errors!
  status: Status
  token: String!
  user: User!
}
